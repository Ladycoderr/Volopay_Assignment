{"version":3,"sources":["components/NavBar.js","components/Card.js","components/YourCard.js","components/AllCards.js","components/BlockedCards.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","exact","activeClassName","to","style","marginRight","color","Card","name","budgetName","expiry","spentValue","spentCurrency","availableSpend","availableCurrency","card_type","size","marginTop","marginLeft","transform","fontWeight","width","Your","user","data","Data","filter","ele","findIndex","id","owner_id","map","val","budget_name","spent","value","currency","available_to_spend","All","useState","filterToggle","setFilterToggle","searchTerm","setSearchTerm","subCheck","setSubCheck","burnCheck","setBurnCheck","setFilter","setData","page","setPage","useEffect","getCards","slice","type","placeholder","onChange","e","target","onClick","checked","onScroll","scrollHeight","scrollTop","clientHeight","toLowerCase","includes","Blocked","blocked","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.505bf6cd.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../styles/NavBar.css\";\nimport { FaBars, FaThLarge, FaVideo } from \"react-icons/fa\";\n\nconst NavBar = () => {\n  return (\n    <div className=\"top_header_container\">\n      <nav>\n        <ul>\n          <li>\n            <NavLink\n              exact\n              activeClassName=\"active_navbar\"\n              className=\"navLink-1\"\n              to=\"/your\"\n            >\n              Your\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              exact\n              activeClassName=\"active_navbar\"\n              className=\"navLink\"\n              to=\"/\"\n            >\n              All\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              exact\n              activeClassName=\"active_navbar\"\n              className=\"navLink\"\n              to=\"/blocked\"\n            >\n              Blocked\n            </NavLink>\n          </li>\n        </ul>\n        <div className=\"navBar_icon\">\n          <FaThLarge style={{ marginRight: \"1.5rem\", color: \"grey\" }} />\n          <FaBars style={{ color: \"grey\" }} />\n        </div>\n      </nav>\n      <div className=\"navbar_line\"></div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"../styles/Card.css\";\nimport { GoPrimitiveDot } from \"react-icons/go\";\nimport { AiFillFire } from \"react-icons/ai\";\nimport { HiRefresh } from \"react-icons/hi\";\n\nconst Card = ({\n  name,\n  budgetName,\n  expiry,\n  spentValue,\n  spentCurrency,\n  availableSpend,\n  availableCurrency,\n  card_type,\n}) => {\n  return (\n    <div className=\"main_container\">\n      <div className=\"card_container\">\n        <div className=\"top_part\">\n          <div className=\"top_part_1\">\n            <h2>{name}</h2>\n            <p>{budgetName}</p>\n            <button className=\"burner\">\n              {card_type === \"burner\" ? \"BURNER\" : \"SUBSCRIPTION\"}\n            </button>\n          </div>\n          <div className=\"top_part_2\">\n            <div className=\"burn_icon\">\n              {card_type === \"burner\" ? (\n                <AiFillFire\n                  size=\"1.5rem\"\n                  style={{\n                    marginTop: \".7rem\",\n                    marginLeft: \".7rem\",\n                    color: \"rgb(255, 90, 118)\",\n                  }}\n                />\n              ) : (\n                <HiRefresh\n                  size=\"1.5rem\"\n                  style={{\n                    transform: \"rotate(90deg)\",\n                    fontWeight: \"bolder\",\n                    marginTop: \".7rem\",\n                    marginLeft: \".7rem\",\n                    color: \"rgb(255, 90, 118)\",\n                  }}\n                />\n              )}\n            </div>\n            <p>Expires: {expiry}</p>\n          </div>\n        </div>\n        <div className=\"pink_green_line\">\n          <div\n            style={{\n              width: (spentValue / (spentValue + availableSpend)) * 100 + \"%\",\n            }}\n            className=\"pink_line\"\n          ></div>\n          <div\n            style={{\n              width:\n                (availableSpend / (spentValue + availableSpend)) * 100 + \"%\",\n            }}\n            className=\"green_line\"\n          ></div>\n        </div>\n        <div className=\"bottom_part\">\n          <div className=\"bottom_part_1\">\n            <p>\n              <GoPrimitiveDot color=\"rgb(255, 90, 118)\" /> spent\n            </p>\n            <p>\n              <GoPrimitiveDot color=\"green\" /> available to spend\n            </p>\n          </div>\n          <div className=\"bottom_part_2\">\n            <p>\n              {spentValue} {spentCurrency}\n            </p>\n            <p>\n              {availableSpend} {availableCurrency}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport Data from \"./data.json\";\nconst Your = () => {\n  const user = [1, 3];\n  let data = Data.data.filter((ele) => {\n    if (user.findIndex((id) => id === ele.owner_id) !== -1) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  return (\n    <div>\n      {data.map((val, id) => {\n        return (\n          <Card\n            key={id}\n            name={val.name}\n            budgetName={val.budget_name}\n            expiry={val.expiry}\n            spentValue={val.spent.value}\n            spentCurrency={val.spent.currency}\n            availableSpend={val.available_to_spend.value}\n            availableCurrency={val.available_to_spend.currency}\n            card_type={val.card_type}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Your;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport Data from \"./data\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { IoFilter } from \"react-icons/io5\";\nimport \"../styles/AllCard.css\";\n\nconst All = () => {\n  const [filterToggle, setFilterToggle] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [subCheck, setSubCheck] = useState(false);\n  const [burnCheck, setBurnCheck] = useState(false);\n  const [filter, setFilter] = useState(null);\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(0);\n\n  const handleFilterSubmit = () => {\n   if(burnCheck || subCheck) setFilter({burnCheck, subCheck});\n   else setFilter(null);\n   setFilterToggle(false)\n  }\n\n  const handleScrollEvent = (e) => {\n    let endList =\n      e.target.scrollHeight - e.target.scrollTop - e.target.clientHeight < 3;\n    if (endList) {\n      let newPage = page + 1;\n      setPage(newPage);\n    }\n  };\n  useEffect(() => {\n    getCards(page);\n  }, [page]);\n  const getCards = (page) => {\n    setData(Data.data.slice(0, page * 4 + 4));\n  };\n  return (\n    <div>\n      <div className=\"body_icon\">\n        <div className=\"searchBox\">\n          <input\n            type=\"text\"\n            className=\"searchText\"\n            placeholder=\"Type here...\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <div className=\"search_btn\">\n            <FaSearch />\n          </div>\n        </div>\n        <div\n          onClick={() => setFilterToggle(!filterToggle)}\n          className=\"filter_icon_container\"\n        >\n          <IoFilter size=\"1.2rem\" /> <p>Filter</p>\n        </div>\n      </div>\n      {/* card_container */}\n      {filterToggle ? (\n        <div className=\"all_filter\">\n          <div className=\"filter_box_container\">\n            <div>\n              <h4 className=\"filter_header\">Filters</h4>\n            </div>\n            <div className=\"type_container\">\n              <p className=\"type\">Type</p>\n              <div className=\"subs_burn_flex\">\n                <div className=\"check_subs\">\n                  <input type=\"checkbox\" checked={subCheck} onClick={(e) => setSubCheck(e.target.checked)}/>\n                  <p>Subscription</p>\n                </div>\n                <div className=\"check_burner\">\n                  <input type=\"checkbox\" checked={burnCheck} onClick={(e) => setBurnCheck(e.target.checked)} />\n                  <p>Burner</p>\n                </div>\n              </div>\n              <div>\n                <p>Cardholder</p>\n                <select className=\"select_option\" name=\"\" id=\"\">\n                  <option className=\"select-value\" value=\"\">\n                    Select cardholder\n                  </option>\n                </select>\n              </div>\n              <div className=\"filter_container_btn\">\n                <button className=\"apply_btn\" onClick={handleFilterSubmit}>Apply</button>\n                <button\n                  onClick={() => {\n                    setFilter(null)\n                    setFilterToggle(false)\n                  }}\n                  className=\"clear_btn\"\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      <div className=\"scroll_div\" onScroll={handleScrollEvent}>\n        {data\n          .filter((val) => {\n            if (searchTerm === \"\") {\n              return true;\n            } else if (\n              val.name.toLowerCase().includes(searchTerm.toLowerCase())\n            ) {\n              return val;\n            } else {\n              return false;\n            }\n          })\n          .map((val, id) => {\n            return (\n              \n                (!filter || (filter.burnCheck && filter.subCheck)) ? <>\n                <Card\n                key={id}\n                name={val.name}\n                budgetName={val.budget_name}\n                expiry={val.expiry}\n                spentValue={val.spent.value}\n                spentCurrency={val.spent.currency}\n                availableSpend={val.available_to_spend.value}\n                availableCurrency={val.available_to_spend.currency}\n                card_type={val.card_type}\n              />\n                </> \n                :\n                filter.burnCheck && val.card_type === \"burner\" ?\n                <Card\n                key={id}\n                name={val.name}\n                budgetName={val.budget_name}\n                expiry={val.expiry}\n                spentValue={val.spent.value}\n                spentCurrency={val.spent.currency}\n                availableSpend={val.available_to_spend.value}\n                availableCurrency={val.available_to_spend.currency}\n                card_type={val.card_type}\n              />\n                 : \n                 filter.subCheck && val.card_type === \"subscription\" ?\n                 <Card\n                 key={id}\n                 name={val.name}\n                 budgetName={val.budget_name}\n                 expiry={val.expiry}\n                 spentValue={val.spent.value}\n                 spentCurrency={val.spent.currency}\n                 availableSpend={val.available_to_spend.value}\n                 availableCurrency={val.available_to_spend.currency}\n                 card_type={val.card_type}\n               /> :\n               <></>\n              \n            )\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default All;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport Data from \"./data.json\";\nconst Blocked = () => {\n  const blocked = [4, 7];\n  let data = Data.data.filter((ele) => {\n    if (blocked.findIndex((id) => id === ele.owner_id)  !== -1) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  return (\n    <div>\n      {data.map((val, id) => {\n        return (\n          <Card\n            key={id}\n            name={val.name}\n            budgetName={val.budget_name}\n            expiry={val.expiry}\n            spentValue={val.spent.value}\n            spentCurrency={val.spent.currency}\n            availableSpend={val.available_to_spend.value}\n            availableCurrency={val.available_to_spend.currency}\n            card_type={val.card_type}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Blocked;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Your from \"./components/YourCard\";\nimport All from \"./components/AllCards\";\nimport Blocked from \"./components/BlockedCards\";\nimport { Route, Switch } from \"react-router\";\nimport \"./App.css\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={All} />\n        <Route exact path=\"/your\" component={Your} />\n        <Route exact path=\"/blocked\" component={Blocked} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}